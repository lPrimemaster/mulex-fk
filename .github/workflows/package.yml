name: CPack Auto Packaging

on:
  push:
    branches:
      - master

jobs:
  build-deb:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow write for automated releases
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: sudo apt update && sudo apt install -y cmake make gcc g++ zlib1g-dev libuv1-dev python3

      - name: Configure
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DLTRACE=OFF -DUSB_SUPPORT=OFF -DGH_ACTION_MODE=ON

      - name: Build
        run: cmake --build build --parallel

        # Make VERSION and VNAME available
      - name: Read version
        run: | 
          cat build/manifest.json | python3 -c "import json,sys;o=json.load(sys.stdin);print(f\"export VERSION={o['version']}\");print(f\"export VNAME={o['vname']}\");" > build/setenv.sh
          chmod +x build/setenv.sh
          source ./build/setenv.sh
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VNAME=$VNAME" >> $GITHUB_OUTPUT
        id: read_version

      - name: Package
        run: |
          cd build
          sudo cpack
          cd ..

      - name: Generate artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: build/*.deb

      - name: Generate release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.read_version.outputs.VERSION }}-${{ steps.read_version.outputs.VNAME }}-r${{ github.run_number }}
          files: build/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-win:
    runs-on: windows-latest
    permissions:
      contents: write # Allow write for automated releases
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: choco install mingw cmake python3 -y

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git C:\\vcpkg
          C:\\vcpkg\\bootstrap-vcpkg.bat

      - name: Install vcpkg dependencies
        run: |
          C:\\vcpkg\\vcpkg install libuv zlib --triplet=x64-mingw-dynamic --host-triplet=x64-mingw-dynamic
          C:\\vcpkg\\vcpkg integrate install

      - name: Configure
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DLTRACE=OFF -DUSB_SUPPORT=OFF -DGH_ACTION_MODE=ON -G"MinGW Makefiles" -DCMAKE_TOOLCHAIN_FILE="C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="x64-mingw-dynamic" -DVCPKG_ROOT="C:\\vcpkg"

      - name: Build
        run: cmake --build build --parallel

        # Make VERSION and VNAME available
      - name: Read version
        run: | 
          Get-Content build\manifest.json | ConvertFrom-Json | ForEach-Object {
            Write-Output "VERSION=$($_.version)" >> $ENV:GITHUB_OUTPUT
            Write-Output "VNAME=$($_.vname)" >> $ENV:GITHUB_OUTPUT
          }
        id: read_version

      - name: Package
        run: |
          cd build
          cpack
          cd ..

      - name: Generate artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: build/mulex-fk-*-win64.exe

      - name: Generate release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.read_version.outputs.VERSION }}-${{ steps.read_version.outputs.VNAME }}-r${{ github.run_number }}
          files: build/mulex-fk-*-win64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
